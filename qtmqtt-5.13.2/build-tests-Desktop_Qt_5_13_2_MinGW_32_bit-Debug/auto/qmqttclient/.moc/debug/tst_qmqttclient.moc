/****************************************************************************
** Meta object code from reading C++ file 'tst_qmqttclient.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.13.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qmqttclient.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.13.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_Tst_QMqttClient_t {
    QByteArrayData data[32];
    char stringdata0[605];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Tst_QMqttClient_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Tst_QMqttClient_t qt_meta_stringdata_Tst_QMqttClient = {
    {
QT_MOC_LITERAL(0, 0, 15), // "Tst_QMqttClient"
QT_MOC_LITERAL(1, 16, 12), // "initTestCase"
QT_MOC_LITERAL(2, 29, 0), // ""
QT_MOC_LITERAL(3, 30, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 46, 16), // "getSetCheck_data"
QT_MOC_LITERAL(5, 63, 11), // "getSetCheck"
QT_MOC_LITERAL(6, 75, 16), // "sendReceive_data"
QT_MOC_LITERAL(7, 92, 11), // "sendReceive"
QT_MOC_LITERAL(8, 104, 18), // "retainMessage_data"
QT_MOC_LITERAL(9, 123, 13), // "retainMessage"
QT_MOC_LITERAL(10, 137, 16), // "willMessage_data"
QT_MOC_LITERAL(11, 154, 11), // "willMessage"
QT_MOC_LITERAL(12, 166, 19), // "compliantTopic_data"
QT_MOC_LITERAL(13, 186, 14), // "compliantTopic"
QT_MOC_LITERAL(14, 201, 23), // "subscribeLongTopic_data"
QT_MOC_LITERAL(15, 225, 18), // "subscribeLongTopic"
QT_MOC_LITERAL(16, 244, 22), // "dataIncludingZero_data"
QT_MOC_LITERAL(17, 267, 17), // "dataIncludingZero"
QT_MOC_LITERAL(18, 285, 21), // "publishLongTopic_data"
QT_MOC_LITERAL(19, 307, 16), // "publishLongTopic"
QT_MOC_LITERAL(20, 324, 25), // "reconnect_QTBUG65726_data"
QT_MOC_LITERAL(21, 350, 20), // "reconnect_QTBUG65726"
QT_MOC_LITERAL(22, 371, 28), // "openIODevice_QTBUG66955_data"
QT_MOC_LITERAL(23, 400, 23), // "openIODevice_QTBUG66955"
QT_MOC_LITERAL(24, 424, 33), // "staticProperties_QTBUG_67176_..."
QT_MOC_LITERAL(25, 458, 28), // "staticProperties_QTBUG_67176"
QT_MOC_LITERAL(26, 487, 14), // "authentication"
QT_MOC_LITERAL(27, 502, 18), // "messageStatus_data"
QT_MOC_LITERAL(28, 521, 13), // "messageStatus"
QT_MOC_LITERAL(29, 535, 25), // "messageStatusReceive_data"
QT_MOC_LITERAL(30, 561, 20), // "messageStatusReceive"
QT_MOC_LITERAL(31, 582, 22) // "subscriptionIdsOverlap"

    },
    "Tst_QMqttClient\0initTestCase\0\0"
    "cleanupTestCase\0getSetCheck_data\0"
    "getSetCheck\0sendReceive_data\0sendReceive\0"
    "retainMessage_data\0retainMessage\0"
    "willMessage_data\0willMessage\0"
    "compliantTopic_data\0compliantTopic\0"
    "subscribeLongTopic_data\0subscribeLongTopic\0"
    "dataIncludingZero_data\0dataIncludingZero\0"
    "publishLongTopic_data\0publishLongTopic\0"
    "reconnect_QTBUG65726_data\0"
    "reconnect_QTBUG65726\0openIODevice_QTBUG66955_data\0"
    "openIODevice_QTBUG66955\0"
    "staticProperties_QTBUG_67176_data\0"
    "staticProperties_QTBUG_67176\0"
    "authentication\0messageStatus_data\0"
    "messageStatus\0messageStatusReceive_data\0"
    "messageStatusReceive\0subscriptionIdsOverlap"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Tst_QMqttClient[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      30,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  164,    2, 0x08 /* Private */,
       3,    0,  165,    2, 0x08 /* Private */,
       4,    0,  166,    2, 0x08 /* Private */,
       5,    0,  167,    2, 0x08 /* Private */,
       6,    0,  168,    2, 0x08 /* Private */,
       7,    0,  169,    2, 0x08 /* Private */,
       8,    0,  170,    2, 0x08 /* Private */,
       9,    0,  171,    2, 0x08 /* Private */,
      10,    0,  172,    2, 0x08 /* Private */,
      11,    0,  173,    2, 0x08 /* Private */,
      12,    0,  174,    2, 0x08 /* Private */,
      13,    0,  175,    2, 0x08 /* Private */,
      14,    0,  176,    2, 0x08 /* Private */,
      15,    0,  177,    2, 0x08 /* Private */,
      16,    0,  178,    2, 0x08 /* Private */,
      17,    0,  179,    2, 0x08 /* Private */,
      18,    0,  180,    2, 0x08 /* Private */,
      19,    0,  181,    2, 0x08 /* Private */,
      20,    0,  182,    2, 0x08 /* Private */,
      21,    0,  183,    2, 0x08 /* Private */,
      22,    0,  184,    2, 0x08 /* Private */,
      23,    0,  185,    2, 0x08 /* Private */,
      24,    0,  186,    2, 0x08 /* Private */,
      25,    0,  187,    2, 0x08 /* Private */,
      26,    0,  188,    2, 0x08 /* Private */,
      27,    0,  189,    2, 0x08 /* Private */,
      28,    0,  190,    2, 0x08 /* Private */,
      29,    0,  191,    2, 0x08 /* Private */,
      30,    0,  192,    2, 0x08 /* Private */,
      31,    0,  193,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void Tst_QMqttClient::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<Tst_QMqttClient *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->getSetCheck_data(); break;
        case 3: _t->getSetCheck(); break;
        case 4: _t->sendReceive_data(); break;
        case 5: _t->sendReceive(); break;
        case 6: _t->retainMessage_data(); break;
        case 7: _t->retainMessage(); break;
        case 8: _t->willMessage_data(); break;
        case 9: _t->willMessage(); break;
        case 10: _t->compliantTopic_data(); break;
        case 11: _t->compliantTopic(); break;
        case 12: _t->subscribeLongTopic_data(); break;
        case 13: _t->subscribeLongTopic(); break;
        case 14: _t->dataIncludingZero_data(); break;
        case 15: _t->dataIncludingZero(); break;
        case 16: _t->publishLongTopic_data(); break;
        case 17: _t->publishLongTopic(); break;
        case 18: _t->reconnect_QTBUG65726_data(); break;
        case 19: _t->reconnect_QTBUG65726(); break;
        case 20: _t->openIODevice_QTBUG66955_data(); break;
        case 21: _t->openIODevice_QTBUG66955(); break;
        case 22: _t->staticProperties_QTBUG_67176_data(); break;
        case 23: _t->staticProperties_QTBUG_67176(); break;
        case 24: _t->authentication(); break;
        case 25: _t->messageStatus_data(); break;
        case 26: _t->messageStatus(); break;
        case 27: _t->messageStatusReceive_data(); break;
        case 28: _t->messageStatusReceive(); break;
        case 29: _t->subscriptionIdsOverlap(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

QT_INIT_METAOBJECT const QMetaObject Tst_QMqttClient::staticMetaObject = { {
    &QObject::staticMetaObject,
    qt_meta_stringdata_Tst_QMqttClient.data,
    qt_meta_data_Tst_QMqttClient,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *Tst_QMqttClient::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Tst_QMqttClient::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_Tst_QMqttClient.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int Tst_QMqttClient::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 30)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 30;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 30)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 30;
    }
    return _id;
}
struct qt_meta_stringdata_FakeServer_t {
    QByteArrayData data[4];
    char stringdata0[45];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_FakeServer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_FakeServer_t qt_meta_stringdata_FakeServer = {
    {
QT_MOC_LITERAL(0, 0, 10), // "FakeServer"
QT_MOC_LITERAL(1, 11, 12), // "createSocket"
QT_MOC_LITERAL(2, 24, 0), // ""
QT_MOC_LITERAL(3, 25, 19) // "connectionRequested"

    },
    "FakeServer\0createSocket\0\0connectionRequested"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_FakeServer[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   24,    2, 0x0a /* Public */,
       3,    0,   25,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void FakeServer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<FakeServer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->createSocket(); break;
        case 1: _t->connectionRequested(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

QT_INIT_METAOBJECT const QMetaObject FakeServer::staticMetaObject = { {
    &QObject::staticMetaObject,
    qt_meta_stringdata_FakeServer.data,
    qt_meta_data_FakeServer,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *FakeServer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *FakeServer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_FakeServer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int FakeServer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
